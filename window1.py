# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import uic
import sys
import subprocess
from threading import *
from multiprocessing.connection import Listener


class Ui_MainWindow(object):
    def __init__(self):
        t = Thread(target=self.jethandler)
        t.start()

    #         super(Ui_MainWindow,self).__init__()
    #         uic.loadUi("window1.ui",self)

    #         self.backkgroundd=self.findChild(QLabel,"background")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1649, 914)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.backkgroundd = QtWidgets.QLabel(self.centralwidget)
        self.backkgroundd.setGeometry(QtCore.QRect(0, -20, 1801, 951))
        self.backkgroundd.setStyleSheet(
            "background-color: #144272;\n"
            ' background-image: url("Icons2/background1.jpg");'
        )
        self.backkgroundd.setText("")
        self.backkgroundd.setObjectName("backkgroundd")
        self.TeamNameLabel = QtWidgets.QLabel(self.centralwidget)
        self.TeamNameLabel.setGeometry(QtCore.QRect(30, 0, 321, 81))
        font = QtGui.QFont()
        font.setPointSize(40)
        font.setBold(True)
        font.setWeight(75)
        self.TeamNameLabel.setFont(font)
        self.TeamNameLabel.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.TeamNameLabel.setObjectName("TeamNameLabel")
        self.frame_camera = QtWidgets.QFrame(self.centralwidget)
        self.frame_camera.setGeometry(QtCore.QRect(640, 20, 981, 741))
        self.frame_camera.setStyleSheet(
            "border-radius: 50%;\n" "background-color: #6B778D;"
        )
        ######self.backgroundd=self.findChild(QLabel,"background")
        self.frame_camera.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_camera.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_camera.setObjectName("frame_camera")
        self.Camera_representation = QtWidgets.QLabel(self.frame_camera)
        self.Camera_representation.setGeometry(QtCore.QRect(20, 20, 941, 701))
        self.Camera_representation.setSizeIncrement(QtCore.QSize(0, 0))
        self.Camera_representation.setStyleSheet("background-color:#0A2647;")
        self.Camera_representation.setText("")
        self.Camera_representation.setObjectName("Camera_representation")

        self.Camera_representation1 = QtWidgets.QLabel(self.frame_camera)
        self.Camera_representation1.setGeometry(QtCore.QRect(20, 20, 941, 701))
        self.Camera_representation1.setSizeIncrement(QtCore.QSize(0, 0))
        self.Camera_representation1.setStyleSheet("background-color:#0A2647;")
        self.Camera_representation1.setText("")
        self.Camera_representation1.setObjectName("Camera_representation")
        self.groupBox_controller = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_controller.setGeometry(QtCore.QRect(20, 240, 611, 311))
        self.groupBox_controller.setStyleSheet(
            "color: rgb(255, 255, 255);\n" "\n" ""
        )
        self.groupBox_controller.setObjectName("groupBox_controller")
        self.horizontalLayoutWidget = QtWidgets.QWidget(
            self.groupBox_controller
        )
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 20, 591, 281))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_controller = QtWidgets.QHBoxLayout(
            self.horizontalLayoutWidget
        )
        self.horizontalLayout_controller.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_controller.setObjectName(
            "horizontalLayout_controller"
        )
        self.verticalLayout1_controller = QtWidgets.QVBoxLayout()
        self.verticalLayout1_controller.setObjectName(
            "verticalLayout1_controller"
        )
        self.frame_anticlockwise = QtWidgets.QFrame(
            self.horizontalLayoutWidget
        )
        self.frame_anticlockwise.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_anticlockwise.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_anticlockwise.setObjectName("frame_anticlockwise")
        self.pushButton_anticlockwise = QtWidgets.QPushButton(
            self.frame_anticlockwise
        )
        self.pushButton_anticlockwise.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_anticlockwise.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_anticlockwise.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap("IconJPG/antiClockwise-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_anticlockwise.setIcon(icon)
        self.pushButton_anticlockwise.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_anticlockwise.setObjectName("pushButton_anticlockwise")
        self.verticalLayout1_controller.addWidget(self.frame_anticlockwise)
        self.frame_left_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_left_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_left_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_left_btn.setObjectName("frame_left_btn")
        self.pushButton_left = QtWidgets.QPushButton(self.frame_left_btn)
        self.pushButton_left.setEnabled(True)
        self.pushButton_left.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_left.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_left.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap("IconJPG\left-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_left.setIcon(icon1)
        self.pushButton_left.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_left.setObjectName("pushButton_left")
        self.verticalLayout1_controller.addWidget(self.frame_left_btn)
        self.frame_upward_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_upward_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_upward_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_upward_btn.setObjectName("frame_upward_btn")
        self.pushButton_upward = QtWidgets.QPushButton(self.frame_upward_btn)
        self.pushButton_upward.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_upward.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_upward.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(
            QtGui.QPixmap("IconJPG/ascending-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_upward.setIcon(icon2)
        self.pushButton_upward.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_upward.setObjectName("pushButton_upward")
        self.verticalLayout1_controller.addWidget(self.frame_upward_btn)
        self.horizontalLayout_controller.addLayout(
            self.verticalLayout1_controller
        )
        self.verticalLayout2_controller = QtWidgets.QVBoxLayout()
        self.verticalLayout2_controller.setObjectName(
            "verticalLayout2_controller"
        )
        self.frame_forward_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_forward_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_forward_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_forward_btn.setObjectName("frame_forward_btn")
        self.pushButton_forward = QtWidgets.QPushButton(self.frame_forward_btn)
        self.pushButton_forward.setGeometry(QtCore.QRect(0, 0, 140, 81))
        self.pushButton_forward.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_forward.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(
            QtGui.QPixmap("IconJPG\\upward-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_forward.setIcon(icon3)
        self.pushButton_forward.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_forward.setObjectName("pushButton_forward")
        self.verticalLayout2_controller.addWidget(self.frame_forward_btn)
        self.frame_backward_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_backward_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_backward_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_backward_btn.setObjectName("frame_backward_btn")
        self.pushButton_backward = QtWidgets.QPushButton(
            self.frame_backward_btn
        )
        self.pushButton_backward.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_backward.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;\n"
            ""
        )
        self.pushButton_backward.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(
            QtGui.QPixmap("IconJPG\\downward-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_backward.setIcon(icon4)
        self.pushButton_backward.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_backward.setObjectName("pushButton_backward")
        self.verticalLayout2_controller.addWidget(self.frame_backward_btn)
        self.frame_tilt_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_tilt_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_tilt_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_tilt_btn.setObjectName("frame_tilt_btn")
        self.pushButton_tilt = QtWidgets.QPushButton(self.frame_tilt_btn)
        self.pushButton_tilt.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_tilt.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_tilt.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(
            QtGui.QPixmap("IconJPG//tilt-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_tilt.setIcon(icon5)
        self.pushButton_tilt.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_tilt.setObjectName("pushButton_tilt")
        self.verticalLayout2_controller.addWidget(self.frame_tilt_btn)
        self.horizontalLayout_controller.addLayout(
            self.verticalLayout2_controller
        )
        self.verticalLayout3_controller = QtWidgets.QVBoxLayout()
        self.verticalLayout3_controller.setObjectName(
            "verticalLayout3_controller"
        )
        self.frame_clockwise_btn = QtWidgets.QFrame(
            self.horizontalLayoutWidget
        )
        self.frame_clockwise_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_clockwise_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_clockwise_btn.setObjectName("frame_clockwise_btn")
        self.pushButton_clockwise = QtWidgets.QPushButton(
            self.frame_clockwise_btn
        )
        self.pushButton_clockwise.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_clockwise.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_clockwise.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(
            QtGui.QPixmap("IconJPG\clockwise-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_clockwise.setIcon(icon6)
        self.pushButton_clockwise.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_clockwise.setObjectName("pushButton_clockwise")
        self.verticalLayout3_controller.addWidget(self.frame_clockwise_btn)
        self.frame_right_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_right_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_right_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_right_btn.setObjectName("frame_right_btn")
        self.pushButton_right = QtWidgets.QPushButton(self.frame_right_btn)
        self.pushButton_right.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_right.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_right.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(
            QtGui.QPixmap("IconJPG//right-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_right.setIcon(icon7)
        self.pushButton_right.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_right.setObjectName("pushButton_right")
        self.verticalLayout3_controller.addWidget(self.frame_right_btn)
        self.frame_downward_btn = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.frame_downward_btn.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_downward_btn.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_downward_btn.setObjectName("frame_downward_btn")
        self.pushButton_downward = QtWidgets.QPushButton(
            self.frame_downward_btn
        )
        self.pushButton_downward.setGeometry(QtCore.QRect(0, 0, 140, 80))
        self.pushButton_downward.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_downward.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(
            QtGui.QPixmap("IconJPG\descending-grey.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_downward.setIcon(icon8)
        self.pushButton_downward.setIconSize(QtCore.QSize(110, 110))
        self.pushButton_downward.setObjectName("pushButton_downward")
        self.verticalLayout3_controller.addWidget(self.frame_downward_btn)
        self.horizontalLayout_controller.addLayout(
            self.verticalLayout3_controller
        )
        self.verticalLayout4_controller = QtWidgets.QVBoxLayout()
        self.verticalLayout4_controller.setObjectName(
            "verticalLayout4_controller"
        )
        self.frame_horizontal_gripper_btn = QtWidgets.QFrame(
            self.horizontalLayoutWidget
        )
        self.frame_horizontal_gripper_btn.setEnabled(True)
        self.frame_horizontal_gripper_btn.setFrameShape(
            QtWidgets.QFrame.StyledPanel
        )
        self.frame_horizontal_gripper_btn.setFrameShadow(
            QtWidgets.QFrame.Raised
        )
        self.frame_horizontal_gripper_btn.setObjectName(
            "frame_horizontal_gripper_btn"
        )
        self.pushButton_horizontal_gripper = QtWidgets.QPushButton(
            self.frame_horizontal_gripper_btn
        )
        self.pushButton_horizontal_gripper.setGeometry(
            QtCore.QRect(0, 0, 140, 131)
        )
        self.pushButton_horizontal_gripper.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_horizontal_gripper.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(
            QtGui.QPixmap("IconJPG\\x-close.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_horizontal_gripper.setIcon(icon9)
        self.pushButton_horizontal_gripper.setIconSize(QtCore.QSize(120, 120))
        self.pushButton_horizontal_gripper.setObjectName(
            "pushButton_horizontal_gripper"
        )
        self.pushButton_horizontal_gripper_2 = QtWidgets.QPushButton(
            self.frame_horizontal_gripper_btn
        )
        self.pushButton_horizontal_gripper_2.setGeometry(
            QtCore.QRect(0, 140, 140, 131)
        )
        self.pushButton_horizontal_gripper_2.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_horizontal_gripper_2.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(
            QtGui.QPixmap("IconJPG\\y-close.jpg"),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        self.pushButton_horizontal_gripper_2.setIcon(icon10)
        self.pushButton_horizontal_gripper_2.setIconSize(
            QtCore.QSize(120, 120)
        )
        self.pushButton_horizontal_gripper_2.setObjectName(
            "pushButton_horizontal_gripper_2"
        )
        self.verticalLayout4_controller.addWidget(
            self.frame_horizontal_gripper_btn
        )
        self.horizontalLayout_controller.addLayout(
            self.verticalLayout4_controller
        )
        self.frame_timer = QtWidgets.QFrame(self.centralwidget)
        self.frame_timer.setGeometry(QtCore.QRect(20, 90, 611, 140))
        self.frame_timer.setStyleSheet(
            "border:1px solid #ffffff;\n" "border-radius: 10px;\n" "\n" "\n" ""
        )
        self.frame_timer.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_timer.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_timer.setObjectName("frame_timer")
        self.label_timer = QtWidgets.QLabel(self.frame_timer)
        self.label_timer.setGeometry(QtCore.QRect(30, 10, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.label_timer.setFont(font)
        self.label_timer.setStyleSheet("border:none;\n" "")
        self.label_timer.setObjectName("label_timer")
        self.rep_timer = QtWidgets.QLabel(self.frame_timer)
        self.rep_timer.setGeometry(QtCore.QRect(140, 20, 251, 31))
        self.rep_timer.setStyleSheet("border-color: rgb(20, 66, 114);")
        self.rep_timer.setObjectName("rep_timer")
        self.frame_timer_btns = QtWidgets.QFrame(self.frame_timer)
        self.frame_timer_btns.setGeometry(QtCore.QRect(20, 80, 571, 51))
        self.frame_timer_btns.setStyleSheet(
            "border-radius: 10px;\n" "border-color:#ffffff"
        )
        self.frame_timer_btns.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_timer_btns.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_timer_btns.setObjectName("frame_timer_btns")
        self.Startbtn_Timer = QtWidgets.QPushButton(self.frame_timer_btns)
        self.Startbtn_Timer.setGeometry(QtCore.QRect(30, 10, 135, 35))
        self.Startbtn_Timer.setSizeIncrement(QtCore.QSize(100, 40))
        self.Startbtn_Timer.setStyleSheet(
            "border-radius: 10px;\n"
            "color: rgb(255, 255, 255);\n"
            "background-color: rgb(207, 102, 83);\n"
            "background-color: #900C3F;\n"
            "border-color:transparent"
        )
        self.Startbtn_Timer.setObjectName("Startbtn_Timer")
        self.pausebtn_Timer = QtWidgets.QPushButton(self.frame_timer_btns)
        self.pausebtn_Timer.setGeometry(QtCore.QRect(220, 10, 135, 35))
        self.pausebtn_Timer.setSizeIncrement(QtCore.QSize(100, 40))
        self.pausebtn_Timer.setStyleSheet(
            "border-radius: 10px;\n"
            "color: rgb(255, 255, 255);\n"
            "background-color: rgb(207, 102, 83);\n"
            "background-color: #900C3F;\n"
            "border-color:transparent"
        )
        self.pausebtn_Timer.setObjectName("pausebtn_Timer")
        self.Resetbtn_Timer = QtWidgets.QPushButton(self.frame_timer_btns)
        self.Resetbtn_Timer.setGeometry(QtCore.QRect(400, 10, 135, 35))
        self.Resetbtn_Timer.setSizeIncrement(QtCore.QSize(0, 0))
        self.Resetbtn_Timer.setStyleSheet(
            "border-radius: 10px;\n"
            "color: rgb(255, 255, 255);\n"
            "background-color: rgb(207, 102, 83);\n"
            "background-color: #900C3F;\n"
            "border-color:transparent"
        )
        self.Resetbtn_Timer.setObjectName("Resetbtn_Timer")
        self.frame_cmera_options = QtWidgets.QFrame(self.centralwidget)
        self.frame_cmera_options.setGeometry(QtCore.QRect(1320, 760, 331, 71))
        self.frame_cmera_options.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_cmera_options.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_cmera_options.setObjectName("frame_cmera_options")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(
            self.frame_cmera_options
        )
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 20, 301, 51))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_camera_options = QtWidgets.QHBoxLayout(
            self.horizontalLayoutWidget_2
        )
        self.horizontalLayout_camera_options.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_camera_options.setObjectName(
            "horizontalLayout_camera_options"
        )
        self.label_camera_options = QtWidgets.QLabel(
            self.horizontalLayoutWidget_2
        )
        self.label_camera_options.setStyleSheet(
            "color: rgb(255, 255, 255);\n" ""
        )
        self.label_camera_options.setObjectName("label_camera_options")
        self.horizontalLayout_camera_options.addWidget(
            self.label_camera_options
        )
        self.radioButton_on_camera_options = QtWidgets.QRadioButton(
            self.horizontalLayoutWidget_2, clicked=lambda: self.presscam()
        )
        self.radioButton_on_camera_options.setStyleSheet(
            "color: rgb(255, 255, 255);\n" "font-weight:bold\n" ""
        )
        self.radioButton_on_camera_options.setAutoRepeatInterval(100)
        self.radioButton_on_camera_options.setObjectName(
            "radioButton_on_camera_options"
        )
        self.horizontalLayout_camera_options.addWidget(
            self.radioButton_on_camera_options
        )
        self.radioButton_off_camera_options = QtWidgets.QRadioButton(
            self.horizontalLayoutWidget_2, clicked=lambda: self.presscam()
        )
        self.radioButton_off_camera_options.setStyleSheet(
            "color: rgb(255, 255, 255);\n" "font-weight:bold\n" ""
        )
        self.radioButton_off_camera_options.setObjectName(
            "radioButton_off_camera_options"
        )
        self.horizontalLayout_camera_options.addWidget(
            self.radioButton_off_camera_options
        )
        self.groupBox_sensors = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_sensors.setGeometry(QtCore.QRect(20, 730, 601, 131))
        self.groupBox_sensors.setStyleSheet(
            "color: rgb(255, 255, 255);\n" "border-color:transparent;\n" ""
        )
        self.groupBox_sensors.setObjectName("groupBox_sensors")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(
            self.groupBox_sensors
        )
        self.horizontalLayoutWidget_3.setGeometry(
            QtCore.QRect(9, 13, 581, 111)
        )
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_sensors = QtWidgets.QHBoxLayout(
            self.horizontalLayoutWidget_3
        )
        self.horizontalLayout_sensors.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_sensors.setObjectName("horizontalLayout_sensors")
        self.frame_ACC = QtWidgets.QFrame(self.horizontalLayoutWidget_3)
        self.frame_ACC.setStyleSheet(
            "border-right: 1px solid white;\\n\n"
            "border-raduis:0px;\n"
            "background-color: transparent;"
        )
        self.frame_ACC.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_ACC.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_ACC.setObjectName("frame_ACC")
        self.gridLayoutWidget = QtWidgets.QWidget(self.frame_ACC)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 181, 89))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout_ACC = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout_ACC.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_ACC.setObjectName("gridLayout_ACC")
        self.label_value_XACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_value_XACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_XACC.setObjectName("label_value_XACC")
        self.gridLayout_ACC.addWidget(self.label_value_XACC, 0, 1, 1, 1)
        self.label_XACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_XACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_XACC.setObjectName("label_XACC")
        self.gridLayout_ACC.addWidget(self.label_XACC, 0, 0, 1, 1)
        self.label_YACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_YACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_YACC.setObjectName("label_YACC")
        self.gridLayout_ACC.addWidget(self.label_YACC, 1, 0, 1, 1)
        self.label_ZACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_ZACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_ZACC.setObjectName("label_ZACC")
        self.gridLayout_ACC.addWidget(self.label_ZACC, 2, 0, 1, 1)
        self.label_value_YACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_value_YACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_YACC.setObjectName("label_value_YACC")
        self.gridLayout_ACC.addWidget(self.label_value_YACC, 1, 1, 1, 1)
        self.label_value_ZACC = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_value_ZACC.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_ZACC.setObjectName("label_value_ZACC")
        self.gridLayout_ACC.addWidget(self.label_value_ZACC, 2, 1, 1, 1)
        self.horizontalLayout_sensors.addWidget(self.frame_ACC)
        self.frame_GRO = QtWidgets.QFrame(self.horizontalLayoutWidget_3)
        self.frame_GRO.setStyleSheet(
            "border-right: 1px solid white;\\n\n"
            "border-raduis:0px;\n"
            "background-color: transparent;"
        )
        self.frame_GRO.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_GRO.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_GRO.setObjectName("frame_GRO")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.frame_GRO)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(-10, 10, 201, 89))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_GRO = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_GRO.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_GRO.setObjectName("gridLayout_GRO")
        self.label_value_XGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_value_XGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_XGRO.setObjectName("label_value_XGRO")
        self.gridLayout_GRO.addWidget(self.label_value_XGRO, 0, 1, 1, 1)
        self.label_YGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_YGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_YGRO.setObjectName("label_YGRO")
        self.gridLayout_GRO.addWidget(self.label_YGRO, 1, 0, 1, 1)
        self.label_ZGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_ZGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_ZGRO.setObjectName("label_ZGRO")
        self.gridLayout_GRO.addWidget(self.label_ZGRO, 2, 0, 1, 1)
        self.label_value_YGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_value_YGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_YGRO.setObjectName("label_value_YGRO")
        self.gridLayout_GRO.addWidget(self.label_value_YGRO, 1, 1, 1, 1)
        self.label_value_ZGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_value_ZGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_value_ZGRO.setObjectName("label_value_ZGRO")
        self.gridLayout_GRO.addWidget(self.label_value_ZGRO, 2, 1, 1, 1)
        self.label_XGRO = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_XGRO.setStyleSheet(
            "border-color:transparent;\n" "color: rgb(255, 255, 255);"
        )
        self.label_XGRO.setObjectName("label_XGRO")
        self.gridLayout_GRO.addWidget(self.label_XGRO, 0, 0, 1, 1)
        self.horizontalLayout_sensors.addWidget(self.frame_GRO)
        self.frame_MAG = QtWidgets.QFrame(self.horizontalLayoutWidget_3)
        self.frame_MAG.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_MAG.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_MAG.setObjectName("frame_MAG")
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.frame_MAG)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(0, 10, 181, 89))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_MAG = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_MAG.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_MAG.setObjectName("gridLayout_MAG")
        self.label_XMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_XMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_XMAG.setObjectName("label_XMAG")
        self.gridLayout_MAG.addWidget(self.label_XMAG, 0, 0, 1, 1)
        self.label_value_XMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_value_XMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_value_XMAG.setObjectName("label_value_XMAG")
        self.gridLayout_MAG.addWidget(self.label_value_XMAG, 0, 1, 1, 1)
        self.label_YMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_YMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_YMAG.setObjectName("label_YMAG")
        self.gridLayout_MAG.addWidget(self.label_YMAG, 1, 0, 1, 1)
        self.label_value_YMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_value_YMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_value_YMAG.setObjectName("label_value_YMAG")
        self.gridLayout_MAG.addWidget(self.label_value_YMAG, 1, 1, 1, 1)
        self.label_ZMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_ZMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_ZMAG.setObjectName("label_ZMAG")
        self.gridLayout_MAG.addWidget(self.label_ZMAG, 2, 0, 1, 1)
        self.label_value_ZMAG = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_value_ZMAG.setStyleSheet("\n" "color: rgb(255, 255, 255);")
        self.label_value_ZMAG.setObjectName("label_value_ZMAG")
        self.gridLayout_MAG.addWidget(self.label_value_ZMAG, 2, 1, 1, 1)
        self.horizontalLayout_sensors.addWidget(self.frame_MAG)
        self.frame_scripts_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_scripts_2.setGeometry(QtCore.QRect(480, 540, 171, 181))
        self.frame_scripts_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_scripts_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_scripts_2.setObjectName("frame_scripts_2")
        self.label_scripts = QtWidgets.QLabel(self.frame_scripts_2)
        self.label_scripts.setGeometry(QtCore.QRect(0, 20, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_scripts.setFont(font)
        self.label_scripts.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_scripts.setObjectName("label_scripts")
        self.frame_script_checkbox = QtWidgets.QFrame(self.frame_scripts_2)
        self.frame_script_checkbox.setGeometry(QtCore.QRect(0, 49, 211, 141))
        self.frame_script_checkbox.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_script_checkbox.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_script_checkbox.setObjectName("frame_script_checkbox")
        self.checkBox_Autodocking = QtWidgets.QCheckBox(
            self.frame_script_checkbox, clicked=lambda: self.autoDocking()
        )
        self.checkBox_Autodocking.setGeometry(QtCore.QRect(0, 64, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_Autodocking.setFont(font)
        self.checkBox_Autodocking.setStyleSheet(
            "border-radius: 10px;\n"
            "color: rgb(255, 255, 255);\n"
            "background-color: rgb(207, 102, 83);\n"
            "background-color: #900C3F;\n"
            "border-color:transparent;\n"
            "padding-left: 10px;\n"
            ""
        )
        self.checkBox_Autodocking.setObjectName("checkBox_Autodocking")
        self.checkBox_joystick = QtWidgets.QCheckBox(
            self.frame_script_checkbox, clicked=lambda: self.JoyStick_Start()
        )
        self.checkBox_joystick.setGeometry(QtCore.QRect(0, 10, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox_joystick.setFont(font)
        self.checkBox_joystick.setStyleSheet(
            "padding-left: 10px;\n"
            "border-radius: 10px;\n"
            "color: rgb(255, 255, 255);\n"
            "background-color: rgb(207, 102, 83);\n"
            "background-color: #900C3F;\n"
            "border-color:transparent;\n"
            ""
        )
        self.checkBox_joystick.setObjectName("checkBox_joystick")
        self.frame_Par30 = QtWidgets.QFrame(self.centralwidget)
        self.frame_Par30.setGeometry(QtCore.QRect(640, 760, 201, 101))
        self.frame_Par30.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_Par30.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_Par30.setObjectName("frame_Par30")
        self.Groupbox_Par30 = QtWidgets.QGroupBox(self.frame_Par30)
        self.Groupbox_Par30.setGeometry(QtCore.QRect(30, 10, 161, 91))
        self.Groupbox_Par30.setStyleSheet("color:white;")
        self.Groupbox_Par30.setObjectName("Groupbox_Par30")
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.Groupbox_Par30)
        self.horizontalLayoutWidget_4.setGeometry(
            QtCore.QRect(10, 20, 131, 51)
        )
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.horizontalLayout_Par30 = QtWidgets.QHBoxLayout(
            self.horizontalLayoutWidget_4
        )
        self.horizontalLayout_Par30.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_Par30.setObjectName("horizontalLayout_Par30")
        self.label_depth = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        self.label_depth.setObjectName("label_depth")
        self.horizontalLayout_Par30.addWidget(self.label_depth)
        self.label_value_depth = QtWidgets.QLabel(
            self.horizontalLayoutWidget_4
        )
        self.label_value_depth.setObjectName("label_value_depth")
        self.horizontalLayout_Par30.addWidget(self.label_value_depth)
        self.groupBox_pump = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_pump.setGeometry(QtCore.QRect(20, 560, 181, 141))
        self.groupBox_pump.setStyleSheet("color:white;")
        self.groupBox_pump.setObjectName("groupBox_pump")
        self.pushButton_pump = QtWidgets.QPushButton(self.groupBox_pump)
        self.pushButton_pump.setGeometry(QtCore.QRect(10, 20, 161, 111))
        self.pushButton_pump.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_pump.setText("")
        self.pushButton_pump.setObjectName("pushButton_pump")
        self.groupBox_speed = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_speed.setGeometry(QtCore.QRect(220, 560, 241, 141))
        self.groupBox_speed.setStyleSheet("color:white;")
        self.groupBox_speed.setObjectName("groupBox_speed")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_speed)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 20, 221, 111))
        self.pushButton_2.setStyleSheet(
            "border:1px solid #ffffff;\n"
            "border-radius: 10px;\n"
            "background-color: transparent;"
        )
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.c = 0
        self.c1 = 0
        self.seconds = 0
        self.timer = QTimer()
        self.timer.setInterval(1000)
        self.Startbtn_Timer.clicked.connect(self.startTime)
        self.pausebtn_Timer.clicked.connect(self.stopTime)
        self.Resetbtn_Timer.clicked.connect(self.reset)
        self.timer.timeout.connect(self.showClock)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.TeamNameLabel.setText(_translate("MainWindow", "Stingray"))
        self.groupBox_controller.setTitle(
            _translate("MainWindow", "Controller")
        )
        self.label_timer.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p><span style=" font-size:20pt; font-weight:600; color:#d6e4f0;">Timer:</span></p></body></html>',
            )
        )
        self.rep_timer.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-size:16pt; font-weight:600; color:#ffffff;">00:00:00</span></p></body></html>',
            )
        )
        self.Startbtn_Timer.setText(_translate("MainWindow", "Start"))
        self.pausebtn_Timer.setText(_translate("MainWindow", "Pause"))
        self.Resetbtn_Timer.setText(_translate("MainWindow", "Reset"))
        self.label_camera_options.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p><span style=" font-size:12pt; font-weight:600;">camera options:</span></p></body></html>',
            )
        )
        self.radioButton_on_camera_options.setText(
            _translate("MainWindow", "ON")
        )
        self.radioButton_off_camera_options.setText(
            _translate("MainWindow", "OFF")
        )
        self.groupBox_sensors.setTitle(_translate("MainWindow", "Sensors"))
        self.label_value_XACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_XACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">XACC</span></p></body></html>',
            )
        )
        self.label_YACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">YACC</span></p></body></html>',
            )
        )
        self.label_ZACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">ZACC</span></p></body></html>',
            )
        )
        self.label_value_YACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_value_ZACC.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_value_XGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_YGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">YGRO</span></p></body></html>',
            )
        )
        self.label_ZGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">ZGRO</span></p></body></html>',
            )
        )
        self.label_value_YGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_value_ZGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_XGRO.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">XGRO</span></p></body></html>',
            )
        )
        self.label_XMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">XMAG</span></p></body></html>',
            )
        )
        self.label_value_XMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_YMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">YMAG</span></p></body></html>',
            )
        )
        self.label_value_YMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_ZMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">ZMAG</span></p></body></html>',
            )
        )
        self.label_value_ZMAG.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-weight:600;">-----</span></p></body></html>',
            )
        )
        self.label_scripts.setText(_translate("MainWindow", "Scripts"))
        self.checkBox_Autodocking.setText(
            _translate("MainWindow", "Autodocking")
        )
        self.checkBox_joystick.setText(_translate("MainWindow", "JoyStick"))
        self.Groupbox_Par30.setTitle(_translate("MainWindow", "Bar-30"))
        self.label_depth.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-size:11pt; font-weight:600; color:#ffffff;">Depth:</span></p></body></html>',
            )
        )
        self.label_value_depth.setText(
            _translate(
                "MainWindow",
                '<html><head/><body><p align="center"><span style=" font-size:11pt; font-weight:600; color:#ffffff;">-----</span></p></body></html>',
            )
        )
        self.groupBox_pump.setTitle(_translate("MainWindow", "Pump"))
        self.groupBox_speed.setTitle(_translate("MainWindow", "Speed"))

    # import resources_rc

    def presscam(self):
        p2 = None
        if self.radioButton_off_camera_options.isChecked():
            if p2:
                p2.terminate()
                self.conn2.close()
                del p2
                tcam1.terminate()
                del tcam1

        elif self.radioButton_on_camera_options.isChecked():
            cmd = "python OakClient.py"
            p2 = subprocess.Popen(cmd, shell=True)
            tcam1 = Thread(target=self.Camhandler1)
            tcam1.start()

    def caminit1(self):
        self.adrr = ("localhost", 7500)
        self.lis = Listener(self.adrr, authkey=b"bsc")
        print(self.adrr)
        self.conn2 = self.lis.accept()

    def Camhandler1(self):
        self.caminit1()
        while True:
            frame = self.conn2.recv()
            #     data = base64.b64decode(packet,' /')
            #     npdata = np.fromstring(data,dtype=np.uint8)
            #     frame = cv.imdecode(npdata,1)
            #     frame = cv.flip(frame, 1)
            converted = QImage(
                frame,
                frame.shape[1],
                frame.shape[0],
                frame.shape[1] * 3,
                QImage.Format_RGB888,
            ).rgbSwapped()
            #     Pic = converted.scaled(640, 480, Qt.KeepAspectRatio)
            # if self.radioButton_cam1.isChecked():
            #     self.Cam1lbl.setPixmap(QtGui.QPixmap.fromImage(converted))
            if self.radioButton_on_camera_options.isChecked():
                # self.conn1.close()
                self.Camera_representation.show()
                self.Camera_representation.setPixmap(
                    QtGui.QPixmap.fromImage(converted)
                )
            elif self.radioButton_off_camera_options.isChecked():
                self.Camera_representation.close()

    def jetinit(self):
        addr = ("192.168.33.100", 5050)
        l1 = Listener(addr, authkey=b"123")
        self.conn1 = l1.accept()
        self.format = "utf-8"
        header = 1000
        print("connection accepted from", addr)

    def jethandler(self):
        self.jetinit()
        while True:
            ms = self.conn1.recv().decode("utf-8")
            msg = []
            msg = ms.split(",")
            print(msg)
            self.label_value_XACC.setText(msg[0])
            self.label_value_YACC.setText(msg[1])
            self.label_value_ZACC.setText(msg[2])
            self.label_value_XGRO.setText(msg[3])
            self.label_value_YGRO.setText(msg[4])
            self.label_value_ZGRO.setText(msg[5])
            self.label_value_XMAG.setText(msg[6])
            self.label_value_YMAG.setText(msg[7])
            self.label_value_ZMAG.setText(msg[8])
            fontXACC = QtGui.QFont()
            fontXACC.setPointSize(13)
            fontXACC.setBold(True)
            fontXACC.setWeight(75)
            self.label_value_XACC.setFont(fontXACC)
            fontYACC = QtGui.QFont()
            fontYACC.setPointSize(13)
            fontYACC.setBold(True)
            fontYACC.setWeight(75)
            self.label_value_YACC.setFont(fontYACC)
            fontZACC = QtGui.QFont()
            fontZACC.setPointSize(13)
            fontZACC.setBold(True)
            fontZACC.setWeight(75)
            self.label_value_ZACC.setFont(fontZACC)
            fontXGRO = QtGui.QFont()
            fontXGRO.setPointSize(13)
            fontXGRO.setBold(True)
            fontXGRO.setWeight(75)
            self.label_value_XGRO.setFont(fontXGRO)
            fontYGRO = QtGui.QFont()
            fontYGRO.setPointSize(13)
            fontYGRO.setBold(True)
            fontYGRO.setWeight(75)
            self.label_value_YGRO.setFont(fontYGRO)
            fontZGRO = QtGui.QFont()
            fontZGRO.setPointSize(13)
            fontZGRO.setBold(True)
            fontZGRO.setWeight(75)
            self.label_value_ZGRO.setFont(fontZGRO)
            fontXMAG = QtGui.QFont()
            fontXMAG.setPointSize(13)
            fontXMAG.setBold(True)
            fontXMAG.setWeight(75)
            self.label_value_XMAG.setFont(fontXMAG)
            fontYMAG = QtGui.QFont()
            fontYMAG.setPointSize(13)
            fontYMAG.setBold(True)
            fontYMAG.setWeight(75)
            self.label_value_YMAG.setFont(fontYMAG)
            fontZMAG = QtGui.QFont()
            fontZMAG.setPointSize(13)
            fontZMAG.setBold(True)
            fontZMAG.setWeight(75)
            self.label_value_ZMAG.setFont(fontZMAG)

    def JoyStick_Start(self):
        p2 = None
        if self.checkBox_joystick.isChecked() == True:
            cmd2 = "python client.py"
            p2 = subprocess.Popen(cmd2, shell=True)
            # t=Thread(target=self.joyhandler)
            # t.start()
            self.timer1 = QTimer()
            self.timer1.timeout.connect(
                self.joyhandler
            )  # execute `display_time`
            self.timer1.setInterval(25)  # 1000ms = 1s
            self.timer1.start()
        elif self.checkBox_joystick.isChecked() == False:
            if p2:
                p2.terminate()
                self.conn.close()
                self.timer1.stop()
                del p2

    def joyinit(self):
        addr = ("localhost", 7000)
        l = Listener(addr, authkey=b"123")
        self.conn = l.accept()
        self.format = "utf-8"
        header = 1000
        print("connection accepted from", addr)

    def joyhandler(self):
        if self.c1 == 0:
            self.joyinit()
            self.c1 += 1
            msg = self.conn.recv()
            #     msg=[]
            #     msg=msg
            if msg[21] > 0.2:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_upward.setIcon(icon)
            elif msg[11] == 0:
                icon = QtGui.QIcon()

                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_upward.setIcon(icon)
            if msg[12] == 1 and msg[11] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_downward.setIcon(icon)
            elif msg[12] == 0:
                icon = QtGui.QIcon()

                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_downward.setIcon(icon)
            if float(msg[17]) < 0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_backward.setIcon(iconr)
            elif float(msg[17]) > 0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-green.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_backward.setIcon(iconr)

            if float(msg[17]) > -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_forward.setIcon(iconr)

            elif float(msg[17]) < -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-green.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_forward.setIcon(iconr)
            if float(msg[16]) > -0.2:  #####left
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-grey.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_left.setIcon(iconr)

            elif float(msg[16]) < -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-green.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_left.setIcon(iconr)
            # ------------------------------------------RIGHT
            if float(msg[16]) < 0.1:  ####right
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-grey.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_right.setIcon(iconr)

            elif float(msg[16]) > 0.1:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-green.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_right.setIcon(iconr)
            # ---------------------------------------------- TILT
            if msg[13] == 0 and msg[14] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-left.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-right.jpg"),
                    QtGui.QIcon.Disabled,
                )

                self.pushButton_tilt.setIcon(icon)

            elif msg[13] == 1 and msg[14] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-left.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_tilt.setIcon(icon)

            elif msg[13] == 0 and msg[14] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-right.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_tilt.setIcon(icon)
            if msg[9] == 1 and msg[10] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-open.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-close.jpg"), QtGui.QIcon.Disabled
                )
                self.pushButton_horizontal_gripper.setIcon(icon)
            elif msg[9] == 0 and msg[10] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-open.jpg"), QtGui.QIcon.Disabled
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-close.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_horizontal_gripper.setIcon(icon)
            if float(msg[19]) < 0 and float(msg[18]) > -1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-open.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-close.jpg"), QtGui.QIcon.Disabled
                )
                self.pushButton_horizontal_gripper_2.setIcon(icon)
            elif float(msg[19]) > -1 and float(msg[18]) < 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-open.jpg"), QtGui.QIcon.Disabled
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-close.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_horizontal_gripper_2.setIcon(icon)
            if msg[1] == 0 and msg[2] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_anticlockwise.setIcon(icon)
            elif msg[1] == 1 or msg[2] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_anticlockwise.setIcon(icon)
            if msg[1] == 1 and msg[2] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_clockwise.setIcon(icon)
            elif msg[1] == 0 or msg[2] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_clockwise.setIcon(icon)
            if msg[4] == 1:
                self.flagarm = 1
                # 3ayzeen label b msg armed wala disarmed

        elif self.c1 > 0:
            msg = self.conn.recv()
            #     msg=[]
            #     msg=msg
            #     print(msg)
            # print(msg)
            # print(f" {type(msg[0])}========= {msg[0]}")
            #     print(len(msg))
            #     for i in range(0,len(msg)):
            #       msg[i]=msg[i].lstrip('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
            #       msg[i]=msg[i].rstrip('\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

            # zero=0
            # print(bytes(zero,'utf-8'))
            #     print(msg)
            if float(msg[21]) < -0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_upward.setIcon(icon)
            elif float(msg[21]) > -0.8:
                icon = QtGui.QIcon()

                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/ascending-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_upward.setIcon(icon)
            if float(msg[21]) > 0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_downward.setIcon(icon)
            elif float(msg[21]) < 0.8:
                icon = QtGui.QIcon()

                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\descending-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_downward.setIcon(icon)
            if float(msg[17]) < 0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_backward.setIcon(iconr)
            elif float(msg[17]) > 0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-green.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\downward-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_backward.setIcon(iconr)

            if float(msg[17]) > -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_forward.setIcon(iconr)

            elif float(msg[17]) < -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-green.jpg"),
                    QtGui.QIcon.Active,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG//upward-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_forward.setIcon(iconr)
            if float(msg[16]) > -0.2:  #####left
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-grey.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_left.setIcon(iconr)

            elif float(msg[16]) < -0.2:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG\left-green.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_left.setIcon(iconr)
            # ------------------------------------------RIGHT
            if float(msg[16]) < 0.1:  ####right
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-grey.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_right.setIcon(iconr)

            elif float(msg[16]) > 0.1:
                iconr = QtGui.QIcon()
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                iconr.addPixmap(
                    QtGui.QPixmap("IconJPG/right-green.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_right.setIcon(iconr)
            # ---------------------------------------------- TILT
            if msg[13] == 0 and msg[14] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-left.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("Icons2/tiltright.jpg"), QtGui.QIcon.Disabled
                )

                self.pushButton_tilt.setIcon(icon)

            elif msg[13] == 1 and msg[14] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-left.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_tilt.setIcon(icon)

            elif msg[13] == 0 and msg[14] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/tilt-green-right.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_tilt.setIcon(icon)
            if msg[9] == 0 and msg[10] == 1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-open.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-close.jpg"), QtGui.QIcon.Disabled
                )
                self.pushButton_horizontal_gripper.setIcon(icon)
            elif msg[9] == 1 and msg[10] == 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-open.jpg"), QtGui.QIcon.Disabled
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\\x-close.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_horizontal_gripper.setIcon(icon)
            if float(msg[19]) > -1 and float(msg[18]) < 0:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-open.jpg"), QtGui.QIcon.Active
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-close.jpg"), QtGui.QIcon.Disabled
                )
                self.pushButton_horizontal_gripper_2.setIcon(icon)
            elif float(msg[19]) < 0 and float(msg[18]) > -1:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-open.jpg"), QtGui.QIcon.Disabled
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\y-close.jpg"), QtGui.QIcon.Active
                )
                self.pushButton_horizontal_gripper_2.setIcon(icon)
            if float(msg[20]) < -0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_anticlockwise.setIcon(icon)
            elif float(msg[20]) > -0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG/antiClockwise-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_anticlockwise.setIcon(icon)
            if float(msg[20]) > 0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-green.jpg"),
                    QtGui.QIcon.Active,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-grey.jpg"),
                    QtGui.QIcon.Disabled,
                )
                self.pushButton_clockwise.setIcon(icon)
            elif float(msg[20]) < 0.8:
                icon = QtGui.QIcon()
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-green.jpg"),
                    QtGui.QIcon.Disabled,
                )
                icon.addPixmap(
                    QtGui.QPixmap("IconJPG\clockwise-grey.jpg"),
                    QtGui.QIcon.Active,
                )
                self.pushButton_clockwise.setIcon(icon)

    # --------------------------------------------------------------------------
    # =======================================================TIMER=========================================================================
    def startTime(self):
        self.timer.start(1000)
        self.Startbtn_Timer.setEnabled(False)
        self.pausebtn_Timer.setEnabled(True)

    def stopTime(self):
        self.timer.stop()
        self.pausebtn_Timer.setEnabled(False)
        self.Startbtn_Timer.setEnabled(True)

    def reset(self):
        self.c = 0
        self.seconds = 0
        self.timer.stop()
        self.pausebtn_Timer.setEnabled(False)
        self.Startbtn_Timer.setEnabled(True)
        self.rep_timer.setText("       " + "0:00:00")

    def showClock(self):
        lbl_clck = self.convert(self.seconds)
        self.seconds = self.seconds + 1

        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(70)
        self.rep_timer.setFont(font)
        self.rep_timer.setGeometry(QtCore.QRect(140, 20, 251, 31))
        self.rep_timer.setStyleSheet("color: white; ")
        self.rep_timer.setText("       " + lbl_clck)

    def convert(self, sec):
        sec = sec % (24 * 3600)
        hrs = sec // 3600
        sec %= 3600
        min = sec // 60
        sec %= 60
        return "%d:%02d:%02d" % (hrs, min, sec)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
